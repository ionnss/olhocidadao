services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - SESSION_KEY=${SESSION_KEY}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_FROM_ADDRESS=${EMAIL_FROM_ADDRESS}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_ENCRYPTION=${SMTP_ENCRYPTION}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN}
      - APP_VERSION=${APP_VERSION}
    volumes:
      - ./statics:/olhocidadao/statics
    networks:
      - olhocidadao_network
    depends_on:
      - db
    env_file:
      - .env.local
    working_dir: /olhocidadao
    command: ["/wait-for-it.sh", "db:5432", "-t", "45", "--", "/usr/local/bin/app_olhocidadao"]

  db:
    image: postgres:17.5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - olhocidadao_network
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:2.7-alpine
    ports:
      - "8081:80"
      - "8443:443"
      - "8443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - ./log/caddy:/var/log/caddy
      - ./static:/olhocidadao/static
    networks:
      - olhocidadao_network
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  caddy_data:
  caddy_config:

networks:
  olhocidadao_network:
    driver: bridge
